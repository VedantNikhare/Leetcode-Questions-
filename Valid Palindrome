class Solution {
    public boolean isPalindrome(String s) {
                // Convert the string to lowercase
        s = s.toLowerCase();
        
        int left = 0; // Pointer for the start of the string
        int right = s.length() - 1; // Pointer for the end of the string
        
        while (left < right) {
            // Move the left pointer to the right until an alphanumeric character is found
            while (left < right && !Character.isLetterOrDigit(s.charAt(left))) {
                left++;
            }
            
            // Move the right pointer to the left until an alphanumeric character is found
            while (left < right && !Character.isLetterOrDigit(s.charAt(right))) {
                right--;
            }
            
            // Compare the characters at the left and right pointers
            if (s.charAt(left) != s.charAt(right)) {
                return false; // If they don't match, it's not a palindrome
            }
            
            // Move the pointers inward
            left++;
            right--;
        }
        
        return true; // If we haven't found any mismatches, it's a palindrome
    }
}
